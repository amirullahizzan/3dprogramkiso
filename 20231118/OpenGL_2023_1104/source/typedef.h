//===========================================================================
//!	@file	typedef.h
//!	@brief	型宣言
//===========================================================================
#pragma once

//--------------------------------------------------------------
//! @name	変数型定義
//--------------------------------------------------------------
//!@{

typedef int8_t   s8;    //!< 符号あり  8bit整数
typedef uint8_t  u8;    //!< 符号なし  8bit整数
typedef int16_t  s16;   //!< 符号あり 16bit整数
typedef uint16_t u16;   //!< 符号なし 16bit整数
typedef int32_t  s32;   //!< 符号あり 32bit整数
typedef uint32_t u32;   //!< 符号なし 32bit整数
typedef int64_t  s64;   //!< 符号あり 64bit整数
typedef uint64_t u64;   //!< 符号なし 64bit整数
typedef float    f32;   //!< 単精度浮動小数点数
typedef double   f64;   //!< 倍精度浮動小数点数

//!@}
//===========================================================================
//! カラー構造体
//===========================================================================
struct Color
{
public:
    Color() = default;

    Color(u8 r, u8 g, u8 b, u8 a = 255)
        : r_(r)
        , g_(g)
        , b_(b)
        , a_(a)
    {
    }

public:
    union
    {
        struct
        {
            u8 r_;   //!< R成分
            u8 g_;   //!< G成分
            u8 b_;   //!< B成分
            u8 a_;   //!< A成分
        };
        u32 color_;
    };
};